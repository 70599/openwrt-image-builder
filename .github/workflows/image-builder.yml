name: Openwrt Image Builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Specifies the target image to build.'
        required: true
        default: r4s
      repo:
        type: choice
        description: 'Source code repo'
        options:
        - immortalwrt
        - openwrt
      release:
        description: 'Release version.'
        required: false
        default:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Initialization environment
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo apt install -y jq
    
    - name: Set release version
      id: version
      run: |
        echo release=$([ -n "${{ github.event.inputs.release }}" ] && echo "${{ github.event.inputs.release }}" || echo $(curl -sL https://api.github.com/repos/${{ github.event.inputs.repo }}/${{ github.event.inputs.repo }}/tags | jq -r .[0].name | cut -c2-)) >> $GITHUB_OUTPUT
    
    - name: Set download url
      id: url
      run: |
        if [ ${{ github.event.inputs.profile }} = "r4s" ];
        then
        url="https://downloads.${{ github.event.inputs.repo }}.org/releases/${{ steps.version.outputs.release }}/targets/rockchip/armv8/${{ github.event.inputs.repo }}-imagebuilder-${{ steps.version.outputs.release }}-rockchip-armv8.Linux-x86_64.tar.xz"
        fi
        echo url=$url >> $GITHUB_OUTPUT
    
    - name: Set profile name
      id: profile
      run: |
        echo profile=$([ ${{ github.event.inputs.profile }} = "r4s" ] && echo "friendlyarm_nanopi-r4s" || echo ${{ github.event.inputs.profile }}) >> $GITHUB_OUTPUT
    
    - name: Build image
      run: |
        wget -O imagebuilder.tar.xz ${{ steps.url.outputs.url }}
        tar -J -x -f imagebuilder.tar.xz
        cd ${{ github.event.inputs.repo }}-imagebuilder-*
        make image PROFILE="${{ steps.version.outputs.profile }}" PACKAGES="$(cat ../${{ github.event.inputs.profile }}/pkgs)" FILES="../${{ github.event.inputs.profile }}/files"
    
    - name: Organize files
      id: organize
      run: |
        cd ${{ github.event.inputs.repo }}-imagebuilder-*/bin/targets/*/*
        rm -rf packages
        echo image_path=$(pwd) >> $GITHUB_OUTPUT
    
    - name: Upload image
      uses: actions/upload-artifact@main
      with:
        name: openwrt-${{ steps.version.outputs.release }}-${{ steps.version.outputs.profile }}
        path: ${{ steps.organize.outputs.image_path }}